{"ast":null,"code":"import { REGISTRAR, VERIFICAR } from \"./action-types\";\nconst initialState = {\n  Registrado: null,\n  copydogs: [],\n  temperamento: []\n};\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  // console.log(\"entro al reducer la informacion\" + payload);\n  switch (type) {\n    case REGISTRAR:\n      return {\n        ...state,\n        Registrado: payload\n      };\n    case VERIFICAR:\n      return {\n        ...state,\n        Registrado: payload\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n/*  case TEMPERAMENTO:\r\n      return {\r\n          ...state, temperamento:payload\r\n      }\r\n  case FILTROINPUT:\r\n      const copiedAllDogs = state.copydogs.slice(); // Copia el estado\r\n      const busquedaporname = copiedAllDogs.filter(element => element.name.toLowerCase().includes(payload?.toLowerCase()))\r\n      return {\r\n          ...state,\r\n          allDogs:busquedaporname\r\n      }\r\n  case ORDERAZ:\r\n      let orderedDogs = state.copydogs.slice();\r\n      if (payload === 'A') {\r\n          orderedDogs.sort((a, b) => a.name.localeCompare(b.name));\r\n      } else if (payload === 'B') {\r\n          orderedDogs.sort((a, b) => b.name.localeCompare(a.name));\r\n      }\r\n      console.log('esto manda el reduces ' + JSON.stringify(orderedDogs))\r\n      return {\r\n          ...state,\r\n          allDogs:orderedDogs\r\n      }\r\n  case FILTROTEMPERAMENTO:\r\n      let copy = state.copydogs.slice();\r\n      const busquedaportemperamento = copy.filter(element => {\r\n          const temperament = element.temperament;\r\n          if (temperament) {\r\n              return temperament.toLowerCase().includes(payload?.toLowerCase());\r\n          }\r\n          return false;\r\n      });\r\n      console.log(\"Esta es la busqueda \" + busquedaportemperamento);\r\n      return {\r\n          ...state,\r\n          allDogs:busquedaportemperamento\r\n      }\r\n  case COPYDOG:\r\n      return{\r\n          ...state,\r\n          allDogs: state.copydogs\r\n      } \r\n  case IDBD: \r\n  let bd = state.copydogs.slice();\r\n      const busquedatpBD = bd.filter(element => {\r\n          const tipoBD = element.bd;\r\n          if (tipoBD) {\r\n              return tipoBD.toLowerCase().includes(payload?.toLowerCase());\r\n          }\r\n          return false;\r\n      });\r\n      console.log(\"Esta es la busqueda \" + busquedatpBD);\r\n      return {\r\n          ...state,\r\n          allDogs:busquedatpBD\r\n      }\r\n\r\n}*/\n\nexport default reducer;","map":{"version":3,"names":["REGISTRAR","VERIFICAR","initialState","Registrado","copydogs","temperamento","reducer","state","type","payload"],"sources":["C:/Users/Luis Buelvas/Desktop/Carpeta_PI/ProyectoFinal/FastFoodFront/src/Redux/reducer.js"],"sourcesContent":["import { REGISTRAR,VERIFICAR } from \"./action-types\";\r\n\r\nconst initialState = {\r\n    Registrado: null,\r\n    copydogs:[],\r\n    temperamento:[]\r\n}\r\n\r\nconst reducer = (state= initialState, {type, payload})=>{\r\n   // console.log(\"entro al reducer la informacion\" + payload);\r\n    switch( type ){\r\n        case REGISTRAR:\r\n            return{\r\n                ...state, Registrado:payload\r\n            }\r\n        case VERIFICAR:\r\n            return{\r\n                ...state, Registrado:payload\r\n            } \r\n            default:\r\n                return {...state}\r\n        }\r\n    }\r\n      /*  case TEMPERAMENTO:\r\n            return {\r\n                ...state, temperamento:payload\r\n            }\r\n        case FILTROINPUT:\r\n            const copiedAllDogs = state.copydogs.slice(); // Copia el estado\r\n            const busquedaporname = copiedAllDogs.filter(element => element.name.toLowerCase().includes(payload?.toLowerCase()))\r\n            return {\r\n                ...state,\r\n                allDogs:busquedaporname\r\n            }\r\n        case ORDERAZ:\r\n            let orderedDogs = state.copydogs.slice();\r\n            if (payload === 'A') {\r\n                orderedDogs.sort((a, b) => a.name.localeCompare(b.name));\r\n            } else if (payload === 'B') {\r\n                orderedDogs.sort((a, b) => b.name.localeCompare(a.name));\r\n            }\r\n            console.log('esto manda el reduces ' + JSON.stringify(orderedDogs))\r\n            return {\r\n                ...state,\r\n                allDogs:orderedDogs\r\n            }\r\n        case FILTROTEMPERAMENTO:\r\n            let copy = state.copydogs.slice();\r\n            const busquedaportemperamento = copy.filter(element => {\r\n                const temperament = element.temperament;\r\n                if (temperament) {\r\n                    return temperament.toLowerCase().includes(payload?.toLowerCase());\r\n                }\r\n                return false;\r\n            });\r\n            console.log(\"Esta es la busqueda \" + busquedaportemperamento);\r\n            return {\r\n                ...state,\r\n                allDogs:busquedaportemperamento\r\n            }\r\n        case COPYDOG:\r\n            return{\r\n                ...state,\r\n                allDogs: state.copydogs\r\n            } \r\n        case IDBD: \r\n        let bd = state.copydogs.slice();\r\n            const busquedatpBD = bd.filter(element => {\r\n                const tipoBD = element.bd;\r\n                if (tipoBD) {\r\n                    return tipoBD.toLowerCase().includes(payload?.toLowerCase());\r\n                }\r\n                return false;\r\n            });\r\n            console.log(\"Esta es la busqueda \" + busquedatpBD);\r\n            return {\r\n                ...state,\r\n                allDogs:busquedatpBD\r\n            }\r\n      \r\n}*/\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAACC,SAAS,QAAQ,gBAAgB;AAEpD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAC,EAAE;EACXC,YAAY,EAAC;AACjB,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAEL,YAAY,EAAE;EAACM,IAAI;EAAEC;AAAO,CAAC,KAAG;EACrD;EACC,QAAQD,IAAI;IACR,KAAKR,SAAS;MACV,OAAM;QACF,GAAGO,KAAK;QAAEJ,UAAU,EAACM;MACzB,CAAC;IACL,KAAKR,SAAS;MACV,OAAM;QACF,GAAGM,KAAK;QAAEJ,UAAU,EAACM;MACzB,CAAC;IACD;MACI,OAAO;QAAC,GAAGF;MAAK,CAAC;EACzB;AACJ,CAAC;AACC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}